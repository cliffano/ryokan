---
- hosts: workstation

  vars:
    homebrew_install_path: /usr/local/homebrew
    homebrew_installed_packages:
      - shellcheck
      - xz
      - wget
      - imagemagick
      - sysdig
      - gpg
      - packer
      - awscli
      - hg
      - lnav
      - htop
      - nmap
      - httpie
      - jq
      - hugo
      - terraform
      - maven
      - go
      - virtualenv
      - tmux
    homebrew_taps:
      - caskroom/cask
      - caskroom/versions
      - homebrew/binary
    homebrew_cask_apps:
      - sublime-text
      - facter
      - hiera
      - puppet
      - atom
      - java
    rvm1_install_flags: '--user-install'

  roles:
    # - { role: geerlingguy.homebrew }
    # - { role: rvm_io.rvm1-ruby }
    # - { role: cliffano.newrelic-unix }

  tasks:

  - pip: name={{ item }}
    with_items:
      - pygments
      - pygments-zenburn

  - gem: name={{ item }}
    with_items:
      - tmuxinator

  - name: Ensure SSH directory exists
    file: path={{ home }}/.ssh/ state=directory

  - name: Ensure SSH config directory exists
    file: path={{ home }}/.ssh/config.d/ state=directory

  - name: Ensure workspace directory exists
    file: path={{ workspace }} state=directory

  - name: Set SSH configuration
    file: src={{ workspace }}/config/ssh/{{ item }} dest={{ home }}/.ssh/{{ item }} state=link
    with_items:
      - config
      - konoha_id_rsa
      - konoha_id_rsa.pub

  - name: Set SSH configuration Studio include
    file: src={{ workspace }}/config/studio/{{ item }} dest={{ home }}/.ssh/config.d/config-studio state=link
    with_items:
      - .ssh_config

  - name: Set SSH configuration Shine includes
    file: src={{ workspace }}/config/work-shine/{{ item }} dest={{ home }}/.ssh/config.d/config-shine state=link
    with_items:
      - .ssh_config

  - name: Set PyPI configuration
    template: src={{ workspace }}/config/python/.pypirc dest={{ home }}/.pypirc

  - name: Set npm configuration
    file: src={{ workspace }}/config/node/.npmrc dest={{ home }}/.npmrc state=link

  - name: Set Repoman configuration for project repositories
    file: src={{ workspace }}/config/studio/.repoman.json dest={{ home }}/.repoman.json state=link

  - name: Ensure .profile file exists
    file: path={{ home }}/.profile state=touch mode=0644

  - name: Set .profile
    lineinfile: dest={{ home }}/.profile line="{{ item }}" state=present backup=yes
    with_items:
      - export GOPATH=~/dev/gopath
      - export PATH=$GOPATH/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/rvm/bin:$PATH
      - source ~/.virtualenv/local/bin/activate
      - source ~/.nvm/nvm.sh && nvm use default
      - source ~/.bin/tmuxinator.bash
      - export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
      - export JENKINS_URL=http://pakkun.local:8080
      - export M2_HOME=/usr/local/homebrew/Cellar/maven/3.3.9/libexec
      - export PACKER_HOME=/usr/local/homebrew/Cellar/packer/0.8.6
      - alias clean-sdcard='rm -rf .Trashes/ ._.TemporaryItems .TemporaryItems/'
      - alias resize-images='find . -iname \"*.*\" -exec mogrify -resize 1024x1024 {} \;'
      - alias gaa='git add -A'
      - alias gd='git diff'
      - alias gs='git status'
      - alias gpr='git pull --rebase'
      - alias gpt='git push --tags'
      - alias gprp='git pull --rebase && git push'
      - alias grh='git reset HEAD~'
      - alias pppju='rm -f $PACKER_HOME/bin/packer-post-processor-json-updater && make clean && gox -osarch="darwin/amd64" && cp packer-post-processor-json-updater_darwin_amd64 $PACKER_HOME/bin/packer-post-processor-json-updater'
      - alias makelist='make -qp | awk -F'\'':'\'' '\''/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {split($1,A,/ /);for(i in A)print A[i]}'\'''
      - alias shine-aem-tmux-init='ln -s ~/dev/workspace/config/work-shine/tmuxinator-aem.yml ~/.tmuxinator/shine-aem-workspace.yml'
      - alias shine-aem-tmux-start='tmuxinator start shine-aem-workspace'
      - export GOOGLE_DEVELOPER_API_KEY={{ google_developer_api_key }}
      - export FEEDPAPER_ENV=stg
      - export FEEDPAPER_CFG=../../config/studio/feedpaper
      - export KONTIKI_CFG=../../config/studio/kon-tiki
      - export PATH="~/dev/terraform_0.9.5_darwin_amd64:/usr/local/sbin:$PATH"
      - export EDITOR="vim"

  - name: Set tmuxinator project configs
    file: src={{ workspace }}/{{ item }}/tmuxinator.yml dest={{ home }}/.tmuxinator/{{ item }}.yml state=link
    items:
      - feedpaper
      - kon-tiki

  - name: Ensure global npm packages are installed
    npm: name="{{item}}" global=yes state=present
    items:
      - repoman

---
- hosts: macbookpro00

  vars:
    homebrew_installed_packages:
      - mas
      - node
      - packer
      - cloc
      - telnet
      - gpg2
      - pinentry-mac
      - gh
      - youtube-dl
      - jq
    mas_email: { macappstore.user }
    mas_password: { macappstore.pass }
    mas_apps:
      - { name: Owly, id: 882812218 }
      - { name: Slack, id: 803453959 }
      - { name: WhatsApp Desktop, id: 1147396723 }
      - { name: Magnet, id: 441258766 }
      # - { name: 'iStat Menus', id: 1319778037 } # MDM blocks download
    docker_images:
      - { id: centos7, image: 'centos:centos7' }
      - { id: ubuntu, image: 'ubuntu' }
      - { id: aembuildenv, image: 'shinesolutions/aem-platform-buildenv' }
      - { id: theworksbuildenv, image: 'shinesolutions/the-works-buildenv' }
      - { id: theworksbuildenv-sandpit, image: 'ghcr.io/shinesolutions/the-works-buildenv-sandpit' }
      - { id: theworksbuildenv-publisher, image: 'ghcr.io/shinesolutions/the-works-buildenv-publisher' }
    main_workspaces:
      - control
    project_workspaces:
      - aoc
      - infracat
      - pakkun
      - post
      - theworks
      - gatt
      - nlp
      - drup
      - vulscan
      - studio

  roles:
    - role: geerlingguy.homebrew
    - role: rkhmelichek.mas
    - role: gantsign.oh-my-zsh
      users:
        - username: cliffano
          oh_my_zsh:
            theme: bullet-train

  tasks:

  - name: Set git config
    file: src={{ home }}/dev/workspace-control/config/git/.gitconfig-{{ inventory_hostname }} dest='{{ home }}/.gitconfig' state=link

  - name: Ensure SSH directory exists
    file: path={{ home }}/.ssh/ state=directory

  - name: Ensure SSH config directory exists
    file: path={{ home }}/.ssh/config.d/ state=directory

  - name: Set SSH configuration
    file: src={{ home }}/dev/workspace-control/config/tools/ssh/{{ item }} dest={{ home }}/.ssh/{{ item }} state=link
    with_items:
      - config
      - konoha_id_rsa
      - konoha_id_rsa.pub

  - name: Set main workspaces SSH configuration include
    file: src={{ home }}/dev/workspace-control/config/workspaces/{{ item }}/.ssh_config dest={{ home }}/.ssh/config.d/config-{{ item }} state=link
    with_items: "{{ main_workspaces }}"

  - name: Set project workspaces SSH configuration include
    file: src={{ home }}/dev/workspace-control/config/workspaces/{{ item }}/.ssh_config dest={{ home }}/.ssh/config.d/config-{{ item }} state=link
    with_items: "{{ project_workspaces }}"

  - name: Ensure .zprofile file exists
    file: path={{ home }}/.zprofile state=touch mode=0644

  - name: Set basic aliases
    lineinfile: dest={{ home }}/.zprofile line="{{ item }}" state=present backup=no
    with_items:
      - alias lessr='less -R'

  - name: Set GitHub aliases
    lineinfile: dest={{ home }}/.zprofile line="{{ item }}" state=present backup=no
    with_items:
      - alias gaa='git add -A'
      - alias gbd='git branch -d'
      - alias gcam='git commit -am'
      - alias gcb='git checkout -b'
      - alias gcp='git cherry-pick'
      - alias gcpc='git cherry-pick --continue'
      - alias gco='git checkout'
      - alias gcom='git checkout main'
      - alias gcoms='git checkout master'
      - alias gd='git diff'
      - alias gl3='git log -3'
      - alias gl5='git log -5'
      - alias gp='git push'
      - alias gpr='git pull --rebase'
      - alias gpt='git push --tags'
      - alias gppt='git push && git push --tags'
      - alias gprp='git pull --rebase && git push'
      - alias gprpt='git pull --rebase && git push && git push --tags'
      - alias grh='git reset HEAD~'
      - alias grc='git rebase --continue'
      - alias gs='git status'
      - alias gsa='git stash apply'
      - alias gst='git stash'
      - alias gta='git tag -a'

  - name: Set Docker aliases
    lineinfile: dest={{ home }}/.zprofile line="{{ item }}" state=present backup=no
    with_items:
      - alias dsa='docker stop $(docker ps -a -q)'
      - alias dra='docker rm $(docker ps -a -q)'
      - alias dia='docker rmi $(docker images -q --filter "dangling=true")'
      - alias dxt='docker exec -it'

  - name: Set OpenSesame aliases
    lineinfile: dest={{ home }}/.zprofile line="alias osa='open-sesame aws --region ap-southeast-2 --secgroup-id {{ opensesame_secgroups }} --port 22 --name cliffs'" state=present backup=no

  - name: Set Docker run aliases
    lineinfile: dest={{ home }}/.zprofile regexp="^alias drn-{{ item.id }}.+" line="alias drn-{{ item.id }}='docker run --name {{ item.id }} --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v `pwd`:/opt/workspace -i -t {{ item.image }}'" state=present backup=no
    with_items: "{{ docker_images }}"

  - name: Set Docker attach aliases
    lineinfile: dest={{ home }}/.zprofile regexp="^alias dxt-{{ item.id }}=.*$" line="alias dxt-{{ item.id }}='docker exec -it {{ item.id }}'" state=present backup=no
    with_items: "{{ docker_images }}"

  - name: Set Docker one-off aliases
    lineinfile: dest={{ home }}/.zprofile regexp="^alias drno-{{ item.id }}=.*$" line="alias drno-{{ item.id }}='docker run --rm --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v `pwd`:/opt/workspace -i -t {{ item.image }}'" state=present backup=no
    with_items: "{{ docker_images }}"

  - name: Set Docker AEM Platform one-off alias
    lineinfile: dest={{ home }}/.zprofile regexp="^alias drno-aem-workspace=.*$" line="alias drno-aem-workspace='docker run --rm --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v `pwd`:/opt/workspace -p 45600-45700:45600-45700/tcp -i -t shinesolutions/aem-platform-buildenv-publisher'" state=present backup=no

  - name: Set Docker Jenkins one-off alias
    lineinfile: dest={{ home }}/.zprofile regexp="^alias drno-jenkins=.*$" line="alias drno-jenkins='docker run --rm --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v `pwd`:/opt/workspace -p 8080:8080/tcp -i -t shinesolutions/aem-platform-buildenv'" state=present backup=no

  - name: Set Jenkins alias
    lineinfile: dest={{ home }}/.zprofile line="alias jenkins='docker run -p 8080:8080 -p 50000:50000 -v {{ home }}/dev/workspace-orgs/jenkins_home:/var/jenkins_home jenkins/jenkins:lts'" state=present backup=no

  - name: Set Studio workspace aliases
    lineinfile: dest={{ home }}/.zprofile line="alias ws-{{ item }}='cd {{ home }}/dev/workspace-{{ item }}/ && repoman get'" state=present backup=no
    with_items: "{{ main_workspaces }}"

  - name: Set workspace aliases
    lineinfile: dest={{ home }}/.zprofile line="alias ws-{{ item }}='cd {{ home }}/dev/workspace-{{ item }}/ && repoman get'" state=present backup=no
    with_items: "{{ project_workspaces }}"

  - name: Set Makefile .PHONY creator alias
    lineinfile: dest={{ home }}/.zprofile line="alias makephony='grep \'^[^#[:space:]].*:\' Makefile | sed -e \"s/:.*$//\" | paste -s -d\" \" - | sed -e \"s/\.PHONY$//\"'" state=present backup=no

  - name: Ensure global node.js packages are installed
    npm: name="{{item}}" global=yes state=present
    with_items:
      - repoman
      - open-sesame
      - nba-go

  - name: Ensure main workspace directories exist
    file: path={{ home }}/dev/workspace-{{ item }} state=directory mode=0755
    with_items: "{{ main_workspaces }}"

  - name: Set Repoman configuration for main workspace repositories
    file: src={{ home }}/dev/workspace-control/config/workspaces/{{ item }}/.repoman.json dest={{ home }}/dev/workspace-{{ item }}/.repoman.json state=link
    with_items: "{{ main_workspaces }}"

  - name: Ensure project workspace directories exist
    file: path={{ home }}/dev/workspace-{{ item }} state=directory mode=0755
    with_items: "{{ project_workspaces }}"

  - name: Set Repoman configuration for project workspace repositories
    file: src={{ home }}/dev/workspace-control/config/workspaces/{{ item }}/.repoman.json dest={{ home }}/dev/workspace-{{ item }}/.repoman.json state=link
    with_items: "{{ project_workspaces }}"

  - name: Ensure iTerm2 scripts directory exists
    file: path='{{ home }}/Library/Application Support/iTerm2/Scripts/' state=directory

  - name: Set iTerm2 init script
    file: src={{ home }}/dev/workspace-control/ryokan/resources/studio/iterm2-init.app dest='{{ home }}/Library/Application Support/iTerm2/Scripts/iterm2-init.app' state=link

  - name: Download oh-my-zsh Bullet Train theme
    get_url:
      url: http://raw.github.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme
      dest: "{{ home }}/.oh-my-zsh/themes/bullet-train.zsh-theme"
      mode: '0644'

  - name: Set export required by Bullet Train
    lineinfile: dest={{ home }}/.zprofile line="{{ item }}" state=present backup=no
    with_items:
      - export TERM='xterm-256color'

  - name: Ensure .gnupg directory exists
    file: path={{ home }}/.gnupg state=directory mode=0755

  - name: Set pinentry-program required by git for GPG signing
    lineinfile: dest={{ home }}/.gnupg/gpg-agent.conf line="{{ item }}" state=present backup=no
    with_items:
      - pinentry-program /usr/local/bin/pinentry-mac
      - default-cache-ttl
      - max-cache-ttl 28800

  - name: Pull Docker images
    become: yes
    community.docker.docker_image:
      name: "{{ item }}"
      source: pull
    with_items:
      - centos:centos7
      - ubuntu
      - jenkins/jnlp-slave:latest
      - node
